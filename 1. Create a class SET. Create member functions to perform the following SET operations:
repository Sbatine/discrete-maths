1. Create a class SET. Create member functions to perform the following SET operations:
• is member: check whether an element belongs to the set or not and return value as true/false.
• powerset: list all the elements of the power set of a set.
• subset: Check whether one set is a subset of the other or not.
• union and Intersection of two Sets.
• complement: Assume Universal Set as per the input elements from the user.
• set Difference and Symmetric Difference between two sets.
• cartesian Product of Sets. Write a menu driven program to perform the above functions on an instance of the SET class.


CODE:
from itertools import chain, combinations

class SET:
    def __init__(self, elements):
        self.u_set = set(elements)

    def is_member(self, element):
        return element in self.u_set

    def powerset(self):
        lst = list(self.u_set)
        pset = list(chain.from_iterable(combinations(lst, r) for r in range(len(lst) + 1)))
        return [set(s) for s in pset]

    def subset(self, other_set):
        return other_set.u_set.issubset(self.u_set)

    def union(self, other_set):
        return self.u_set.union(other_set.u_set)

    def intersection(self, other_set):
        return self.u_set.intersection(other_set.u_set)

    def complement(self, universal_set):
        return universal_set.u_set - self.u_set

    def difference(self, other_set):
        return self.u_set.difference(other_set.u_set)

    def symmetric_difference(self, other_set):
        return self.u_set.symmetric_difference(other_set.u_set)

    def cartesian_product(self, other_set):
        return {(x, y) for x in self.u_set for y in other_set.u_set}


def get_set(prompt):
    elements = input(f"Enter elements for {prompt} (space-separated integers): ")
    return SET(map(int, elements.split()))


def menu():
    print("\n--- SET OPERATIONS MENU ---")
    print("1. Check Membership")
    print("2. Power Set")
    print("3. Check Subset")
    print("4. Union and Intersection")
    print("5. Complement")
    print("6. Difference and Symmetric Difference")
    print("7. Cartesian Product")
    print("8. Exit")


def main():
    while True:
        menu()
        choice = input("Enter your choice (1-8): ")

        if choice == '1':
            s = get_set("Set")
            elem = int(input("Enter element to check membership: "))
            print("Member?" , s.is_member(elem))

        elif choice == '2':
            s = get_set("Set")
            print("Power Set:")
            for subset in s.powerset():
                print(subset)

        elif choice == '3':
            main_set = get_set("Main Set")
            sub_set = get_set("Subset to check")
            print("Is Subset?", main_set.subset(sub_set))

        elif choice == '4':
            set1 = get_set("First Set")
            set2 = get_set("Second Set")
            print("Union:", set1.union(set2))
            print("Intersection:", set1.intersection(set2))

        elif choice == '5':
            universal = get_set("Universal Set")
            subset = get_set("Subset")
            print("Complement:", subset.complement(universal))

        elif choice == '6':
            set1 = get_set("First Set")
            set2 = get_set("Second Set")
            print("Difference (Set1 - Set2):", set1.difference(set2))
            print("Symmetric Difference:", set1.symmetric_difference(set2))

        elif choice == '7':
            set1 = get_set("First Set")
            set2 = get_set("Second Set")
            print("Cartesian Product:")
            for pair in set1.cartesian_product(set2):
                print(pair)

        elif choice == '8':
            print("Exiting program.")
            break

        else:
            print("Invalid choice. Please try again.")


if __name__ == "__main__":
    main()

OUTPUT:
--- SET OPERATIONS MENU ---
1. Check Membership
2. Power Set
3. Check Subset
4. Union and Intersection
5. Complement
6. Difference and Symmetric Difference
7. Cartesian Product
8. Exit
Enter your choice (1-8): 1
Enter elements for Set (space-separated integers): 1 2 3 4 5
Enter element to check membership: 3
Member? True

--- SET OPERATIONS MENU ---
1. Check Membership
2. Power Set
3. Check Subset
4. Union and Intersection
5. Complement
6. Difference and Symmetric Difference
7. Cartesian Product
8. Exit
Enter your choice (1-8): 2
Enter elements for Set (space-separated integers): 1 2
Power Set:
set()
{1}
{2}
{1, 2}

--- SET OPERATIONS MENU ---
1. Check Membership
2. Power Set
3. Check Subset
4. Union and Intersection
5. Complement
6. Difference and Symmetric Difference
7. Cartesian Product
8. Exit
Enter your choice (1-8): 3
Enter elements for Main Set (space-separated integers): 1 2 3 4 5
Enter elements for Subset to check (space-separated integers): 2 3
Is Subset? True

--- SET OPERATIONS MENU ---
1. Check Membership
2. Power Set
3. Check Subset
4. Union and Intersection
5. Complement
6. Difference and Symmetric Difference
7. Cartesian Product
8. Exit
Enter your choice (1-8): 4
Enter elements for First Set (space-separated integers): 1 2 3
Enter elements for Second Set (space-separated integers): 3 4 5
Union: {1, 2, 3, 4, 5}
Intersection: {3}

--- SET OPERATIONS MENU ---
1. Check Membership
2. Power Set
3. Check Subset
4. Union and Intersection
5. Complement
6. Difference and Symmetric Difference
7. Cartesian Product
8. Exit
Enter your choice (1-8): 5
Enter elements for Universal Set (space-separated integers): 1 2 3 4 5
Enter elements for Subset (space-separated integers): 2 3
Complement: {1, 4, 5}

--- SET OPERATIONS MENU ---
1. Check Membership
2. Power Set
3. Check Subset
4. Union and Intersection
5. Complement
6. Difference and Symmetric Difference
7. Cartesian Product
8. Exit
Enter your choice (1-8): 6
Enter elements for First Set (space-separated integers): 1 2 3
Enter elements for Second Set (space-separated integers): 2 3 4
Difference (Set1 - Set2): {1}
Symmetric Difference: {1, 4}

--- SET OPERATIONS MENU ---
1. Check Membership
2. Power Set
3. Check Subset
4. Union and Intersection
5. Complement
6. Difference and Symmetric Difference
7. Cartesian Product
8. Exit
Enter your choice (1-8): 7
Enter elements for First Set (space-separated integers): 1 2
Enter elements for Second Set (space-separated integers): 3 4
Cartesian Product:
(2, 3)
(2, 4)
(1, 3)
(1, 4)

--- SET OPERATIONS MENU ---
1. Check Membership
2. Power Set
3. Check Subset
4. Union and Intersection
5. Complement
6. Difference and Symmetric Difference
7. Cartesian Product
8. Exit
Enter your choice (1-8): 8
Exiting program.

